선택자 {
    속성 : 값;
    속성 : 값;
}


주석 모든 에디터 공통
ctrl + / 


[ 선언방식 ]

인라인 방식 / 내장 방식 / 외장 방식


인라인
html tag에 style 속성으로 삽입
단, 직접 기입하는 것은 좋지 않다. / 자동으로 삽입 되는 경우

내장 방식
head tag내부에 style 태그로 선언하는 방식

외장 방식
head tag내부에서 link를 통해 외부로 가져오는 방식
보통 이경우 사용


@import 방식
CSS @import를 이용해 외부 문서로 CSS를 가져오는 방식
link는 html가 가져오는 것이고,
import는 css가 css를 가져오는 방식
< 직렬 호출이기 때문에, 속도가 느려질 수 있음 > == 특수한 경우에 활용

@import rul("경로");



[ 선택자 ]

기본 선택자 4종
전체 / 태그 / 클래스 / 아이디


전체 == *
태그 == 그냥 친다
클래스 == .클래스명
아이디 == #아이디




[ 복합 선택자 ]

일치 선택자
조건이 2개이상인 선택자

선택자선택자 {

}


자식 선택자
자식을 선택함 == 바로 아래 단계 까지만

부모 선택자 > 선택자 {

}


후손 선택자
후손을 선택함 == 아래의 모든 요소들

선택자 선택자 {

}


인접 형제 선택자
대상 다음의 형제 요소 선택

선택자1 + 선택자 {

}
< 선택자 1 다음의 형제요소를 선택 / 앞의 형제들은 관계없음 >


일반 형제 선택자
선택자1 ~ 선택자 {

}
< 선택자 1 다음의 형제요소를 모두 선택 / 앞의 형제들은 관계없음 >



[ 가상 클래스 선택자 ]
: 가 붙은 상태에서 선택



선택자:hover 
마우스가 올라간 상태에서 선택됨

a:hover {    
}
transition 속성 등과 더해 활용이 가능함



선택자:active
마우스 홀드하는 상태에서 선택 됨


선택자:focus
포커스 된 동안만 선택 == 대화형 콘텐츠 혹은 tabindex가 적용 가능한 대상 적용


선택자:first-child / last-child
형제 요소 중 첫번째/마지막 대상을 선택


선택자:nth-child(n)
n번째 요소 선택 
n은 0부터 증가하고, 이부분에 수식으로 선택을 지정할 수 있다.
선택자를 적지 않으면 모든 첫번째 요소를 선택하게 됨

++ 형제 요소에 여러 태그가 섞인 경우, 정상 작동이 안될 가능성이 있다.
++ 후손 선택자의 경우, 아래의 여러 첫번째 후손들이 선택될 수 있다.


선택자:nth-of-type(n)
n키워드 사용시 0부터 해석
태그타입 중 n 번째를 선택함, 단 선택자 조건에 안맞으면 선택 안될 수 있음


부정 선택자
선택자:not(S)
S에 적힌 대상만 빼버림

 

[ 가상 요소 선택자 ]
:: 콜론이 2개 붙음
가상의 대상을 생성해 해당 내용을 적용시켜 추가함
* content 라는 속성을 반드시 넣어야 구현이 됨
  content 내부에 텍스트 뿐만 아니라, url("절대경로")를 작성해 이미지 추가 등이 가능함


선택자::before
선택자 앞에 해당 내용을 적용하는 방식

선택자::after
"" 뒤에 ""



[ 속성 선택자 ]

[속성]
속성을 포함한 대상을 선택하도록 함

ex)
[disabled] {
    opacity: 0.5;
}
input 요소 중 disabled가 포함된 요소만 선택


[속성=value]
속성이 존재하며 특정 값인 경우를 선택


[속성^=value]
속성 값이 존재하는데, value 값으로 시작하는 (압부분이 value와 같은) 대상을 선택


[속성$=value]
속성 값이 존재하는데, value 값으로 시작하는 (뒷부분이 value와 같은) 대상을 선택




[ 상속 ]
부모 개체에 적용되는 내용이 자식요소에도 적용되게 됨
대체로 글자 관련 속성들이 기본적으로 상속됨


++ 강제 상속
속성 값에 대해 inherit를 넣으면 상속받게 됨
ex)
{
    position : inherit;
}



[ 우선순위 ]
css 선언이 중복되는 경우 3가지 조건에 의해 결정됨
명시도 / 선언순서 / 중요도를 통한 높은 점수로 우선 적용


!important
다른 요소는 무시하고 반드시 적용
ex)
color : red !important


인라인 선언 방식
매우 높은 점수로 우선 적용 됨 == 1000점


id 선택자 
100점


클래스 선택자
10점


태그 선택자
1점


전체 선택자
0점


여러 선택자가 같이 사용된 경우 합산해 점수를 계산하여
우선순위가 정해짐;