Python : 프로그래밍 입문자가 읽기 쉽고 적은 코드를 사용하여 프로그램을 개발할 수 있습니다. 많은 사람에게 추천되는 언어이며, 데이터 과학에서도 자주 사용되며 웹사이트 개발에서도 많이 사용되고 있습니다.
PHP : 웹의 80% 이상이 PHP로 만들어졌다고 말합니다. 그만큼 PHP는 웹 개발에서 많이 사용됩니다. 
JavaScript : 자바 스크립트는 처음 시작이 브라우저에서 동작하는 언어였습니다. 현재는 서버에서도 작성하는 프로그램으로 점차 영역을 넓혀가고 있습니다. 프론트 개발자라면 반드시 알아야 할 언어입니다. 자바스크립트 커뮤니티도 점점 더 거대해지고 있습니다.
JAVA : 엔터프라이즈 소프트웨어 환경에 잘 맞는 언어입니다. 큰 규모의 소프트웨어 개발에 자바언어가 많이 사용되고 있습니다. JAVA언어를 지원하는 수많은 커뮤니티에 위해서, 지속적으로 발전되어 훌륭한 구조와 설계 기법들이 잘 갖춰져 있습니다.

HTTP 프로토콜
서버, 클라이언트 간 데이터 전송을 위한 프로토콜

서버가 계속 연결된 상태가 아니기 때문에, 최대 연결 수 보다 많은 요청과 응답의 처리

연결을 끊은 이후 상태를 알 수 없음 -> cookie의 활용


URL 인터넷 상의 자원 위치 / 특정 웹 서버의 파일 접근 경로 


웹프론트엔드
사용자에게 웹을 통해 다양한 콘텐츠(문서, 동영상, 사진 등)를 제공
또한, 사용자의 요청(요구사항)에 반응해서 동작

백 엔드
backend는 정보를 처리하고 저장하며, 요청에 따라 정보를 내려주는 역할
가령 쇼핑몰이라면, 상품 정보를 가지고 있고, 주문을 받아서 저장하고, 사용자가 관심있어 하는 상품을 골라주는 역할이 back-End의 역할


브라우저 동작 
유저 인터페이스 -> 브라우저 엔진 -> 렌더링 엔진 -> 네트워킹 / 자바스크립트 인터프리터 / UI backend


렌더링 엔진의 작동
HTML의 parsing을 통한 DOM tree 구조화 ( HTML 구조화 )
렌더 tree 생성
렌더 tree의 레이아웃 처리 ( CSS 적용 )
화면에 렌더 처리된 렌더 tree를 표기


parsing - general 뜻
특정 문맥 tree를 만들고 넘겨받은 정보를 토큰으로 분해해 tree에 맞춰 처리


HTML parser
HTML 내용들을 계층별로 Parsing과 같이 tree로 해석


문서 객체 모델(DOM; Document Object Model)
객체 지향 모델로써 구조화된 문서를 표현하는 형식이다. 
DOM은 플랫폼/언어 중립적으로 구조화된 문서를 표현하는 W3C의 공식 표준이다. DOM은 또한 W3C가 표준화한 여러 개의 API의 기반


웹서버
소프트웨어 혹은 웹서버 소프트웨어가 돌아가는 컴퓨터
클라이언트가 요청하는 html 문서나 리소스를 전달
리소스는 컴퓨터에 저장된 정적 데이터이거나 동적 결과일 수 있다.

종류
Apache, Nginx, 마소, 구글 웹 서버 ~


DBMS ( Database Management System)
다수의 사용자들이 데이터베이스 내의 데이터 접근을 할 수 있도록 해주는 소프트 웨어


미들웨어 ( middle ware)
클라이언트 쪽에서 로직이 복잡한 경우, 클라이언트 관리에 인한 비용이 많이 발생
클라이언트와 DBMS 사이의 미들웨어 서버에서 동작하도록 하여 비용을 감소시킴


WAS ( Web Application Server )
일종의 미들웨어 / 웹클라이언트 요청 중 보통 웹 어플리케이션이 동작하도록 지원


웹서버 vs WAS
일반적으로 웹서버 == 정적 데이터 처리 / WAS == 동적 데이터 처리
WAS도 웹서버 기능을 내장 / 단 웹서버는 다수에 대한 처리가 빠르기 때문
규모가 커질 수록 웹서버와 WAS를 분리 == 장애 극복 기능을 위하여

